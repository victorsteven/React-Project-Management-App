{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducer/authReducer.js","store/reducer/projectReducer.js","store/reducer/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","name","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d8a7d9d.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport {signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink  to='/create'>New Project</NavLink></li>\n      <li><a  onClick={props.signOut}>Log Out</a></li>\n      <li><NavLink  to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\n    </ul>\n  )\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","export const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS'})\n    }).catch(err => {\n      dispatch({ type: 'LOGIN_ERROR', err});\n    })\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS'});\n    });\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then((res) => {\n      return firestore.collection('users').doc(res.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      })\n    }).then(()=> {\n      dispatch({ type: 'SIGNUP_SUCCESS'})\n    }).catch(err => {\n      dispatch({ type: 'SIGNUP_ERROR', err})\n    })\n  }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink  to='/signup'>Signup</NavLink></li>\n      <li><NavLink  to='/signin'>Login</NavLink></li>\n    </ul>\n  )\n}\n\nexport default SignedOutLinks;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\n\nconst Navbar = (props) => {\n  const { auth, profile } = props \n  // console.log(auth)\n  const links = auth.uid ? <SignedInLinks  profile={ profile }/> : <SignedOutLinks />\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo left\">MarioPlan</Link>\n        {/* <SignedInLinks />\n        <SignedOutLinks /> */}\n        { links }\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n\n  console.log(state)\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\n// export default Navbar;\nexport default connect(mapStateToProps)(Navbar);\n\n","import React from  'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">\n            Notifications\n          </span>\n          <ul className=\"notifications\">\n            { notifications && notifications.map(item => {\n              return (\n                <li key={item.id}>\n                  <span className=\"pink-text\">{item.user} </span>\n                  <span className=\"\">{item.content}</span>\n                  <div className=\"grey-text note-date\">\n                    {moment(item.time.toDate()).fromNow()}\n                  </div>\n\n                </li>\n              )\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary  = ({project}) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n        <div className=\"card-content grey-text text-darken-3\">\n          <span className=\"card-title\">{project.title}</span>\n          <p>{project.content}</p>\n          <p>Posted by { project.authorFirstName}  {project.authorLastName}</p>\n          <div className=\"gery-text\">{ moment(project.createdAt.toDate()).calendar()}</div> \n        </div>\n      </div>\n  )\n}\n\nexport default ProjectSummary","import React from 'react';\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n  return (\n    <div className=\"project-list section\"> \n        {/* <ProjectSummary /> */}\n        { projects && projects.map(project => {\n           return (\n             <Link to={'/project/' + project.id} key={project.id} >              <ProjectSummary project={project} />\n             </Link>\n           )\n        })}\n    </div>\n  )\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from  'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n  \n  render() {\n  const { projects, auth, notifications } = this.props;\n\n  if( !auth.uid) {\n    return <Redirect to='/signin' />\n  }else {\n    console.log(this.props);\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects}/>\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications  notifications={notifications}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log('this is the state: ', state)\n  return {\n    // projects: state.project.projects\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n\n  }\n}\n\n// export default connect(mapStateToProps)(Dashboard);\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt','desc']  },\n    { collection: 'notifications', limit: 3, orderBy: ['time','desc'] }\n  ])\n)(Dashboard);\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\n\nconst  ProjectDetails = (props) =>  {\n\n  \n  // console.log('sure', props)\n  // const id = props.match.params.id\n  const { project, auth } = props;\n    if( !auth.uid)  return <Redirect to='/signin' />\n  if(project) {\n    return (\n    <div className=\"conatainer section project-details\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">{project.title}</span>\n          <p>{project.content}</p>\n        </div>\n        <div className=\"card-action grey-lighten grey-text\">\n          <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n          <div>{ moment(project.createdAt.toDate()).calendar()}</div>\n        </div>\n      </div>\n    </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log('our own: ', state)\n  const id = ownProps.match.params.id\n   const projects = state.firestore.data.projects;\n   const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n// export default ProjectDetails\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects'}\n  ])\n)(ProjectDetails)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\n\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    // console.log(e)\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    // console.log(e)\n    e.preventDefault();\n    // console.log(this.state)\n    this.props.signIn(this.state)\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if(auth.uid)  return <Redirect to='/' />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" name=\"\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"pink btn lighten-1 z-depth-0\">\n              Login\n            </button>\n             <div className=\"red-text center\">\n              { authError ? <p>{authError}</p>: null} \n             </div>\n          </div>\n        </form>        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps =(state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps,  mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions';\n\n\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state)\n    this.props.signUp(this.state);\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if(auth.uid)  return <Redirect to='/' />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" name=\"\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" name=\"\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" name=\"\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"pink btn lighten-1 z-depth-0\">\n              Register\n            </button>\n             <div className=\"red-text center\">\n               { authError ? <p>{ authError }</p> : null }\n             </div>\n          </div>\n        </form>        \n      </div>\n    )\n  }\n} const mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser))\n  }\n}\n\n// export default SignUp\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n\n","import React, { Component } from 'react'\nimport { createProject } from '../../store/actions/projectActions';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state)\n    this.props.createProject(this.state)\n    this.props.history.push('/');\n  }\n  render() {\n    const { auth } = this.props\n    if( !auth.uid)  return <Redirect to='/signin' />\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" name=\"\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange}></textarea>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"pink btn lighten-1 z-depth-0\">\n              Create\n            </button>\n          </div>\n        </form>        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n  //when we use 'thunk', we return a function instead of an object\n  //dispatch: dispatches an action the reducer\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    //make asnc call to the database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('projects').add({\n      ...project, \n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT', project });\n    }).catch((err) => {\n      dispatch({type: 'CREATE_PROJECT_ERROR', err });\n    })\n  }\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from  './components/projects/CreateProject'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={ Dashboard } />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin'component={SignIn} />\n            <Route path='/signup'component={SignUp} />\n            <Route path='/create'component={CreateProject} />\n\n            \n\n          </Switch>\n        </div>\n      </BrowserRouter>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type) {\n    case 'LOGIN_ERROR':\n    console.log('login error');\n      return {\n        ...state,\n        authError: 'login failed'\n      }\n    case 'LOGIN_SUCCESS':\n    console.log('login success');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNOUT_SUCCESS':\n      return state\n    \n      case 'SIGNUP_SUCESS': \n        console.log('Sign uo success');\n        return {\n          ...state,\n          authError: null\n        }\n      case 'SIGNUP_ERROR':\n      console.log('signup error')\n      return {\n        ...state, \n        authError: action.err.message\n      }\n      default:\n      return state;\n    }\n}\n\nexport default authReducer; ","const initState = {\n  projects: [\n    {id: 1, title: 'hello dear', content: 'this is what i am made up of'},\n    {id: 2, title: 'hello dear 2', content: 'this is what i am made up of 2'},\n    {id: 3, title: 'hello dear 3', content: 'this is what i am made up of 3'}\n  ]\n}\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT':\n    console.log('created project', action.project)\n    return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log('create project error', action.err);\n      return state;\n    default:\n      // console.log('cant create project');\n      return state;\n  }\n}\n\nexport default projectReducer; ","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nimport { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer\n\n","  import firebase from 'firebase/app';\n  import 'firebase/firestore'\n  import 'firebase/auth'\n  // Initialize Firebase\n  var config = {\n    apiKey: \"AIzaSyCuImAsrwrOpqPd3CNiowmkstbMSMukr0M\",\n    authDomain: \"react-project-management-app.firebaseapp.com\",\n    databaseURL: \"https://react-project-management-app.firebaseio.com\",\n    projectId: \"react-project-management-app\",\n    storageBucket: \"react-project-management-app.appspot.com\",\n    messagingSenderId: \"459747472719\"\n  };\n  firebase.initializeApp(config);\n  firebase.firestore().settings({timestampsInSnapshots: true});\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducer/rootReducer'\nimport { Provider } from  'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n  );\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}